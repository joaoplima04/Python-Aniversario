import pandas as pd
from datetime import datetime
from mailmerge import MailMerge
from docx2pdf import convert
import subprocess
import os
from O365 import Account, MSGraphProtocol
import base64


def parse_date(date_str):
    return pd.to_datetime(date_str, format='%d/%m', errors='coerce')


def convert_email(value):
    if isinstance(value, str):
        return value.strip()
    return value


def carrega_planilha(caminho_planilha):
    # Carrega os dados da planilha e converte a coluna "Aniversário" para o tipo datetime
    dados = pd.read_excel(caminho_planilha, parse_dates=['Aniversário'], date_parser=parse_date)
    return dados


def filtra_aniversariantes(data, hoje):
    # filtra os aniversáriantes do dia
    aniversariantes_do_dia = data[data['Aniversário'].dt.strftime('%d/%m') == hoje]
    return aniversariantes_do_dia


def obter_pasta_mes(mes):
    meses = {
        1: 'Janeiro',
        2: 'Fevereiro',
        3: 'Março',
        4: 'Abril',
        5: 'Maio',
        6: 'Junho',
        7: 'Julho',
        8: 'Agosto',
        9: 'Setembro',
        10: 'Outubro',
        11: 'Novembro',
        12: 'Dezembro'
    }
    return meses.get(mes)


def cria_diretorio_se_nao_existir(diretorio):
    if not os.path.exists(diretorio):
        os.makedirs(diretorio)


def gera_cartoes_aniversario(data, template_path, output_dir):
    aniversariantes_notificados = []  # Lista para armazenar os aniversariantes notificados

    # Gera os cartões de aniversário e armazena os aniversariantes notificados
    for index, row in data.iterrows():
        documentos = MailMerge(template_path)
        nome = row['Nomeado']
        cargo = row['Cargo']
        comissão = row['Comissão']
        email = row['Email']
        celular = row['Contato']
        uf = row['UF']
        sexo = row['Sexo']

        if sexo == "M":
            genero = "o"
            abreviacao = ""
        else:
            genero = "a"
            abreviacao = "a"

        documentos.merge(Nome=nome, Apelido=genero, CEP=abreviacao)  # Substitua NOME pelo nome da variável no modelo do documento

        # Salva cada cartão de aniversário como um documento separado
        documento_salvo = f"{output_dir}/{nome}.docx"
        documento_pdf = f"{output_dir}/{nome}.pdf"

        documentos.write(documento_salvo)

        # Converte o documento do Word em PDF
        convert(documento_salvo, documento_pdf)
        name = str(nome)
        # Procura os dados de contato e e-mail do aniversariante na segunda planilha (data2)

        aniversariantes_notificados.append((email, celular, nome, comissão, cargo, uf, documento_pdf))

        # Feche o documento modelo
        documentos.close()

    return aniversariantes_notificados


def notifica_aniversariantes(aniversariantes_notificados, output_dir):
    if aniversariantes_notificados:
        # Cria um novo documento em formato Markdown
        documento = []

        # Adiciona o conteúdo da mensagem
        mensagem = f"\nHoje é aniversário dos seguintes colaboradores:\n\n"

        for i, aniversariante in enumerate(aniversariantes_notificados):
            email, celular, nome, comissao, cargo, uf, documento_pdf = aniversariante

            mensagem += f"Nome: {nome}\nUF: {uf}\nCargo: {cargo}\nComissão: {comissao}\n"
            mensagem += f"E-mail: {email}\nCelular: {celular}\n\n"

        documento.append(mensagem)

        # Adiciona a assinatura
        assinatura = "Parabéns a todos!\n\nAtenciosamente,\nSua Equipe"
        documento.append(assinatura)

        # Salva o conteúdo do documento em um arquivo temporário em formato Markdown
        conteudo = '\n'.join(documento)
        dia = "05/08".replace("/", "-")
        arquivo_temporario = f"{output_dir}/{dia}.md"
        with open(arquivo_temporario, 'w', encoding='utf-8') as f:
            f.write(conteudo)

        # Converte o arquivo temporário para o formato do Word usando unoconv
        documento_salvo = f"{output_dir}/{dia}.docx"
        subprocess.run(['python', 'C:/Windows/unoconv.py', '-f', 'docx', '-o', documento_salvo, arquivo_temporario])

        print(f"Documento Word salvo em: {documento_salvo}")


def main():
    hoje = "05/08"  # Defina manualmente a data de hoje

    agora = datetime.now()
    hora = agora.hour

    if hora < 12:
        print("Bom dia!\n")
        saudacao = "Bom dia"
    elif hora < 18:
        print("Boa tarde!\n")
        saudacao = "Boa Tarde"
    else:
        print("Boa noite!\n")
        saudacao = "Boa noite"

    # Carrega os dados da planilha
    dados = carrega_planilha('C:\\Users\\João Lucas\\Downloads\\Nova Planilha Aniversariantes.xlsx')

    # Filtra os aniversariantes do dia
    aniversariantes_do_dia = filtra_aniversariantes(dados, hoje)

    mes = "Agosto"
    dia = hoje.replace("/", "-")
    output_dir = f'C:\\Users\\João Lucas\\Documents\\Aniversáriantes\\{mes}\\{dia}'

    # Cria o diretório do mês se ele não existir
    cria_diretorio_se_nao_existir(f'C:\\Users\\João Lucas\\Documents\\Aniversáriantes\\{mes}')

    # Cria o diretório do dia dentro do diretório do mês
    cria_diretorio_se_nao_existir(output_dir)

    # Gera os cartões de aniversário e armazena os aniversariantes notificados
    aniversariantes_notificados = gera_cartoes_aniversario(aniversariantes_do_dia, 'C:\\Users\\João Lucas\\Downloads\\Cartão de Aniversário.docx', output_dir)

    # Notifica os aniversáriantes do dia
    notifica_aniversariantes(aniversariantes_notificados, output_dir)

    senha = "sucesso15"
    client_secret = "bSK8Q~L.LKjETqkPJmpoUFot9KeSvIy.h9HbKcr7"
    client_id = "cab20616-240b-4b67-b1ec-598369881ac7"

    credentials = (client_id, client_secret, senha)  # Insira seu e-mail e senha aqui

    account = Account(credentials, protocol=MSGraphProtocol())

    # Define os escopos solicitados
    scopes = ['basic', 'message_all']

    # Se não houver token válido, será necessário autenticar novamente
    if not account.is_authenticated:
        if account.authenticate(scopes=scopes):
            account.connection.save_token(token_path='.', token_filename='o365_token.txt')

    # Cria um novo e-mail
    for aniversariante in aniversariantes_notificados:
        email, celular, nome, comissao, cargo, uf, documento_pdf = aniversariante

        # Codifica o arquivo PDF do cartão de aniversário em base64
        with open(documento_pdf, "rb") as file:
            encoded_pdf = base64.b64encode(file.read()).decode('utf-8')

        # Cria um novo email para cada pessoa que faz aniversário
        mail = account.new_message()
        mail.subject = f"Feliz Aniversário, {nome}!"
        mail.to.add("joao.lima@oab.org.br")

        # Insere o cartão de aniversário codificado em base64 no corpo do email em formato HTML
        mail.body = f"""<p>{saudacao} {nome},</p>
                           <p>Desejamos a você um Feliz Aniversário! Que este seja um dia especial e repleto de alegria.</p>
                           <p>Aqui está o seu cartão de aniversário:</p>
                           <p><img src="data:application/pdf;base64,{encoded_pdf}" alt="Cartão de Aniversário" /></p>
                           <p>Atenciosamente,<br/>Sua Equipe</p>"""

        # Envia o email
        response = mail.send()
        if response.status_code == 202:
            print(f"Email enviado para {nome} em {email}")
        else:
            print(f"Falha ao enviar o email para {nome} em {email}")

    input("Pressione Enter para sair...")


if __name__ == "__main__":
    main()
